name: Master SonarQube Analysis
on:
  pull_request:
    types: [opened, synchronize, reopened]

  schedule:
    - cron: "0 0 * * 0"

  workflow_dispatch:

jobs:
  build:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Install SonarQube scanner
        working-directory: ./v1
        run: |
          dotnet tool install dotnet-sonarscanner --global
          dotnet tool install dotnet-coverage --global

      - name: Build and analyze
        working-directory: ./v1
        if: github.event_name != 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: |
          sonarProjectKey=EvolutionFunding_evo.funders.commonmessages_AYL9Py_CNVoODgwTuC0e
          dotnet-sonarscanner begin /k:"$sonarProjectKey" /n:"${{github.repository}}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /v:${{steps.gitversion.outputs.AssemblySemVer}} /d:sonar.qualitygate.wait=true
          dotnet build --no-incremental
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Build and analyze
        working-directory: ./v1
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: |
          sonarProjectKey=EvolutionFunding_evo.funders.commonmessages_AYL9Py_CNVoODgwTuC0e
          dotnet-sonarscanner begin /k:"$sonarProjectKey" /n:"${{github.repository}}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /v:${{steps.gitversion.outputs.AssemblySemVer}} /d:sonar.qualitygate.wait=true /d:sonar.pullrequest.key=${{github.event.pull_request.number}} /d:sonar.pullrequest.branch=${{github.head_ref}} /d:sonar.pullrequest.base=${{github.base_ref}}
          dotnet build --no-incremental
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
